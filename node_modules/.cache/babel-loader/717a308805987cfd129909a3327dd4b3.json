{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\global\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'; //import Calendar from 'react-calendar'\n\nimport './calendar.css';\nimport moment from 'moment';\nimport reactDom from 'react-dom'; // export default function App() {\n//   const [dateState, setDateState] = useState(new Date())\n//   const changeDate = (e) => {\n//     setDateState(e)\n//   }\n//   return (\n//     <>\n//       <Calendar \n//       value={dateState}\n//       onChange={changeDate}\n//       />\n//     <p>Current selected date is <b>{moment(dateState).format('MMMM Do YYYY')}</b></p>\n//     </>\n//   )\n// }\n//const ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMonth: moment(),\n      selectedDay: moment().startOf(\"day\"),\n      selectedMonthEvents: [],\n      showEvents: false\n    };\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n    this.addEvent = this.addEvent.bind(this);\n    this.showCalendar = this.showCalendar.bind(this);\n    this.goToCurrentMonthView = this.goToCurrentMonthView.bind(this);\n    this.initialiseEvents();\n  }\n\n  previous() {\n    const currentMonthView = this.state.selectedMonth;\n    this.setState({\n      selectedMonth: currentMonthView.subtract(1, \"month\")\n    });\n  }\n\n  next() {\n    const currentMonthView = this.state.selectedMonth;\n    this.setState({\n      selectedMonth: currentMonthView.add(1, \"month\")\n    });\n  }\n\n  select(day) {\n    this.setState({\n      selectedMonth: day.date,\n      selectedDay: day.date.clone(),\n      showEvents: true\n    });\n  }\n\n  goToCurrentMonthView() {\n    const currentMonthView = this.state.selectedMonth;\n    this.setState({\n      selectedMonth: moment()\n    });\n  }\n\n  showCalendar() {\n    this.setState({\n      selectedMonth: this.state.selectedMonth,\n      selectedDay: this.state.selectedDay,\n      showEvents: false\n    });\n  }\n\n  renderMonthLabel() {\n    const currentMonthView = this.state.selectedMonth;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"month-label\",\n      children: currentMonthView.format(\"MMMM YYYY\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderDayLabel() {\n    const currentSelectedDay = this.state.selectedDay;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"month-label\",\n      children: currentSelectedDay.format(\"DD MMMM YYYY\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderTodayLabel() {\n    const currentSelectedDay = this.state.selectedDay;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"today-label\",\n      onClick: this.goToCurrentMonthView,\n      children: \"Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderWeeks() {\n    const currentMonthView = this.state.selectedMonth;\n    const currentSelectedDay = this.state.selectedDay;\n    const monthEvents = this.state.selectedMonthEvents;\n    let weeks = [];\n    let done = false;\n    let previousCurrentNextView = currentMonthView.clone().startOf(\"month\").subtract(1, \"d\").day(\"Monday\");\n    let count = 0;\n    let monthIndex = previousCurrentNextView.month();\n\n    while (!done) {\n      weeks.push( /*#__PURE__*/_jsxDEV(Week, {\n        previousCurrentNextView: previousCurrentNextView.clone(),\n        currentMonthView: currentMonthView,\n        monthEvents: monthEvents,\n        selected: currentSelectedDay,\n        select: day => this.select(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this));\n      previousCurrentNextView.add(1, \"w\");\n      done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\n      monthIndex = previousCurrentNextView.month();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"frame\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"dates-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"tbody\",\n          children: weeks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleAdd() {\n    const monthEvents = this.state.selectedMonthEvents;\n    const currentSelectedDate = this.state.selectedDay;\n    let newEvents = [];\n    var eventTitle = prompt(\"Please enter a name for your event: \");\n\n    switch (eventTitle) {\n      case \"\":\n        alert(\"Event name cannot be empty.\");\n        break;\n\n      case null:\n        alert(\"Changed your mind? You can add one later!\");\n        break;\n\n      default:\n        var newEvent = {\n          title: eventTitle,\n          date: currentSelectedDate,\n          dynamic: true\n        };\n        newEvents.push(newEvent);\n\n        for (var i = 0; i < newEvents.length; i++) {\n          monthEvents.push(newEvents[i]);\n        }\n\n        this.setState({\n          selectedMonthEvents: monthEvents\n        });\n        break;\n    }\n  }\n\n  addEvent() {\n    const currentSelectedDate = this.state.selectedDay;\n    let isAfterDay = moment().startOf(\"day\").subtract(1, \"d\");\n\n    if (currentSelectedDate.isAfter(isAfterDay)) {\n      this.handleAdd();\n    } else {\n      if (window.confirm(\"Are you sure you want to add an event in the past?\")) {\n        this.handleAdd();\n      } else {} // end confirm past\n\n    } //end is in the past\n\n  }\n\n  removeEvent(i) {\n    const monthEvents = this.state.selectedMonthEvents.slice();\n    const currentSelectedDate = this.state.selectedDay;\n\n    if (window.confirm(\"Are you sure you want to remove this event?\")) {\n      let index = i;\n\n      if (index != -1) {\n        monthEvents.splice(index, 1);\n      } else {\n        alert(\"No events to remove on this day!\");\n      }\n\n      this.setState({\n        selectedMonthEvents: monthEvents\n      });\n    }\n  }\n\n  initialiseEvents() {\n    const monthEvents = this.state.selectedMonthEvents;\n    let allEvents = [];\n    var event1 = {\n      title: \"\",\n      date: moment(),\n      dynamic: false\n    };\n    var event2 = {\n      title: \"Event 2 - Meeting\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(2, \"h\"),\n      dynamic: false\n    };\n    var event3 = {\n      title: \"Event 3 - Cinema\",\n      date: moment().startOf(\"day\").subtract(7, \"d\").add(18, \"h\"),\n      dynamic: false\n    };\n    var event4 = {\n      title: \"Event 4 - Theater\",\n      date: moment().startOf(\"day\").subtract(16, \"d\").add(20, \"h\"),\n      dynamic: false\n    };\n    var event5 = {\n      title: \"Event 5 - Drinks\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(12, \"h\"),\n      dynamic: false\n    };\n    var event6 = {\n      title: \"Event 6 - Diving\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(13, \"h\"),\n      dynamic: false\n    };\n    var event7 = {\n      title: \"Event 7 - Tennis\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(14, \"h\"),\n      dynamic: false\n    };\n    var event8 = {\n      title: \"Event 8 - Swimmming\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(17, \"h\"),\n      dynamic: false\n    };\n    var event9 = {\n      title: \"Event 9 - Chilling\",\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(16, \"h\"),\n      dynamic: false\n    };\n    var event10 = {\n      title: \"Hello World\",\n      date: moment().startOf(\"day\").add(5, \"h\"),\n      dynamic: false\n    };\n    allEvents.push(event1);\n    allEvents.push(event2);\n    allEvents.push(event3);\n    allEvents.push(event4);\n    allEvents.push(event5);\n    allEvents.push(event6);\n    allEvents.push(event7);\n    allEvents.push(event8);\n    allEvents.push(event9);\n    allEvents.push(event10);\n\n    for (var i = 0; i < allEvents.length; i++) {\n      monthEvents.push(allEvents[i]);\n    }\n\n    this.setState({\n      selectedMonthEvents: monthEvents\n    });\n  }\n\n  render() {\n    const currentMonthView = this.state.selectedMonth;\n    const currentSelectedDay = this.state.selectedDay;\n    const showEvents = this.state.showEvents;\n    {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col leftCol\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"year-header\",\n              children: this.renderDayLabel()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              id: \"add-button\",\n              onClick: this.addEvent,\n              children: \"Add-Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Events, {\n              selectedMonth: this.state.selectedMonth,\n              selectedDay: this.state.selectedDay,\n              selectedMonthEvents: this.state.selectedMonthEvents,\n              removeEvent: i => this.removeEvent(i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"name\",\n              children: \"Press the Add button and enter a name for your event and you can delete me by pressing me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col rightCol\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"left-button\",\n              id: \"prev\",\n              onClick: this.previous,\n              children: \"\\u2329\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-text\",\n              children: [this.renderTodayLabel(), this.renderMonthLabel()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"right-button\",\n              id: \"next\",\n              onClick: this.next,\n              children: \"\\u232A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"months-table\",\n            children: /*#__PURE__*/_jsxDEV(MonthNames, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DayNames, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), this.renderWeeks()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nclass Events extends React.Component {\n  render() {\n    const currentMonthView = this.props.selectedMonth;\n    const currentSelectedDay = this.props.selectedDay;\n    const monthEvents = this.props.selectedMonthEvents;\n    const removeEvent = this.props.removeEvent;\n    const monthEventsRendered = monthEvents.map((event, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-container\",\n        onClick: () => removeEvent(i),\n        children: [/*#__PURE__*/_jsxDEV(ReactCSSTransitionGroup, {\n          component: \"div\",\n          className: \"animated-time\",\n          transitionName: \"time\",\n          transitionAppear: true,\n          transitionAppearTimeout: 500,\n          transitionEnterTimeout: 500,\n          transitionLeaveTimeout: 500,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-time event-attribute\",\n            children: event.date.format(\"HH:mm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactCSSTransitionGroup, {\n          component: \"h1\",\n          className: \"event-container\",\n          transitionName: \"title\",\n          transitionAppear: true // transitionAppearTimeout={500}\n          // transitionEnterTimeout={500}\n          // transitionLeaveTimeout={500}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-name\",\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, event.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this);\n    });\n    const dayEventsRendered = [];\n\n    for (var i = 0; i < monthEventsRendered.length; i++) {\n      if (monthEvents[i].date.isSame(currentSelectedDay, \"day\")) {\n        dayEventsRendered.push(monthEventsRendered[i]);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col leftCol\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-events\",\n        children: dayEventsRendered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass DayNames extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \" days-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Tue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Wed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Thu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Fri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \" day\",\n        children: \"Sat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"day\",\n        children: \"Sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass MonthNames extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Jan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Feb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Mar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Apr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Jun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"month\",\n          children: \"Jul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Aug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Sep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Oct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \" month\",\n          children: \"Nov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"month\",\n          children: \"Dec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Week extends React.Component {\n  render() {\n    let days = [];\n    let date = this.props.previousCurrentNextView;\n    let currentMonthView = this.props.currentMonthView;\n    let selected = this.props.selected;\n    let select = this.props.select;\n    let monthEvents = this.props.monthEvents;\n\n    for (var i = 0; i < 7; i++) {\n      var dayHasEvents = false;\n\n      for (var j = 0; j < monthEvents.length; j++) {\n        if (monthEvents[j].date.isSame(date, \"day\")) {\n          dayHasEvents = true;\n        }\n      }\n\n      let day = {\n        name: date.format(\"dd\").substring(0, 1),\n        number: date.date(),\n        isCurrentMonth: date.month() === currentMonthView.month(),\n        isToday: date.isSame(new Date(), \"day\"),\n        date: date,\n        hasEvents: dayHasEvents\n      };\n      days.push( /*#__PURE__*/_jsxDEV(Day, {\n        day: day,\n        selected: selected,\n        select: select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }, this));\n      date = date.clone();\n      date.add(1, \"d\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table-row\",\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Day extends React.Component {\n  render() {\n    let day = this.props.day;\n    let selected = this.props.selected;\n    let select = this.props.select;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-date\" + (day.isToday ? \" today\" : \"\") + (day.isCurrentMonth ? \"\" : \" different-month\") + (day.date.isSame(selected) ? \" selected\" : \"\") + (day.hasEvents ? \" has-events\" : \"\"),\n      onClick: () => select(day),\n      children: day.number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 537,\n  columnNumber: 17\n}, this), document.getElementById(\"content\"));","map":{"version":3,"sources":["C:/Users/DELL/global/src/index.js"],"names":["React","useState","ReactDOM","ReactCSSTransitionGroup","moment","reactDom","Calendar","Component","constructor","props","state","selectedMonth","selectedDay","startOf","selectedMonthEvents","showEvents","previous","bind","next","addEvent","showCalendar","goToCurrentMonthView","initialiseEvents","currentMonthView","setState","subtract","add","select","day","date","clone","renderMonthLabel","format","renderDayLabel","currentSelectedDay","renderTodayLabel","renderWeeks","monthEvents","weeks","done","previousCurrentNextView","count","monthIndex","month","push","handleAdd","currentSelectedDate","newEvents","eventTitle","prompt","alert","newEvent","title","dynamic","i","length","isAfterDay","isAfter","window","confirm","removeEvent","slice","index","splice","allEvents","event1","event2","event3","event4","event5","event6","event7","event8","event9","event10","render","Events","monthEventsRendered","map","event","dayEventsRendered","isSame","DayNames","MonthNames","Week","days","selected","dayHasEvents","j","name","substring","number","isCurrentMonth","isToday","Date","hasEvents","Day","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,uBAAP,MAAoC,mCAApC,C,CAEA;;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAEP,MAAM,EADV;AAEXQ,MAAAA,WAAW,EAAER,MAAM,GAAGS,OAAT,CAAiB,KAAjB,CAFF;AAGXC,MAAAA,mBAAmB,EAAE,EAHV;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BJ,IAA1B,CAA+B,IAA/B,CAA5B;AAEA,SAAKK,gBAAL;AACD;;AAEDN,EAAAA,QAAQ,GAAG;AACT,UAAMO,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AAEA,SAAKa,QAAL,CAAc;AACZb,MAAAA,aAAa,EAAEY,gBAAgB,CAACE,QAAjB,CAA0B,CAA1B,EAA6B,OAA7B;AADH,KAAd;AAGD;;AAEDP,EAAAA,IAAI,GAAG;AACL,UAAMK,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AACA,SAAKa,QAAL,CAAc;AACZb,MAAAA,aAAa,EAAEY,gBAAgB,CAACG,GAAjB,CAAqB,CAArB,EAAwB,OAAxB;AADH,KAAd;AAGD;;AAEDC,EAAAA,MAAM,CAACC,GAAD,EAAM;AACV,SAAKJ,QAAL,CAAc;AACZb,MAAAA,aAAa,EAAEiB,GAAG,CAACC,IADP;AAEZjB,MAAAA,WAAW,EAAEgB,GAAG,CAACC,IAAJ,CAASC,KAAT,EAFD;AAGZf,MAAAA,UAAU,EAAE;AAHA,KAAd;AAKD;;AAEDM,EAAAA,oBAAoB,GAAE;AACpB,UAAME,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AACA,SAAKa,QAAL,CAAc;AACZb,MAAAA,aAAa,EAAEP,MAAM;AADT,KAAd;AAGD;;AAEDgB,EAAAA,YAAY,GAAG;AACb,SAAKI,QAAL,CAAc;AACZb,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aADd;AAEZC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAFZ;AAGZG,MAAAA,UAAU,EAAE;AAHA,KAAd;AAKD;;AAEDgB,EAAAA,gBAAgB,GAAG;AACjB,UAAMR,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACGY,gBAAgB,CAACS,MAAjB,CAAwB,WAAxB;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDC,EAAAA,cAAc,GAAG;AACf,UAAMC,kBAAkB,GAAG,KAAKxB,KAAL,CAAWE,WAAtC;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACGsB,kBAAkB,CAACF,MAAnB,CAA0B,cAA1B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDG,EAAAA,gBAAgB,GAAG;AACjB,UAAMD,kBAAkB,GAAG,KAAKxB,KAAL,CAAWE,WAAtC;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,KAAKS,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDe,EAAAA,WAAW,GAAG;AACZ,UAAMb,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AACA,UAAMuB,kBAAkB,GAAG,KAAKxB,KAAL,CAAWE,WAAtC;AACA,UAAMyB,WAAW,GAAG,KAAK3B,KAAL,CAAWI,mBAA/B;AAEA,QAAIwB,KAAK,GAAG,EAAZ;AACA,QAAIC,IAAI,GAAG,KAAX;AACA,QAAIC,uBAAuB,GAAGjB,gBAAgB,CAC3CO,KAD2B,GAE3BjB,OAF2B,CAEnB,OAFmB,EAG3BY,QAH2B,CAGlB,CAHkB,EAGf,GAHe,EAI3BG,GAJ2B,CAIvB,QAJuB,CAA9B;AAKA,QAAIa,KAAK,GAAG,CAAZ;AACA,QAAIC,UAAU,GAAGF,uBAAuB,CAACG,KAAxB,EAAjB;;AAEA,WAAO,CAACJ,IAAR,EAAc;AACZD,MAAAA,KAAK,CAACM,IAAN,eACE,QAAC,IAAD;AACE,QAAA,uBAAuB,EAAEJ,uBAAuB,CAACV,KAAxB,EAD3B;AAEE,QAAA,gBAAgB,EAAEP,gBAFpB;AAGE,QAAA,WAAW,EAAEc,WAHf;AAIE,QAAA,QAAQ,EAAEH,kBAJZ;AAKE,QAAA,MAAM,EAAEN,GAAG,IAAI,KAAKD,MAAL,CAAYC,GAAZ;AALjB;AAAA;AAAA;AAAA;AAAA,cADF;AASAY,MAAAA,uBAAuB,CAACd,GAAxB,CAA4B,CAA5B,EAA+B,GAA/B;AACAa,MAAAA,IAAI,GAAGE,KAAK,KAAK,CAAV,IAAeC,UAAU,KAAKF,uBAAuB,CAACG,KAAxB,EAArC;AACAD,MAAAA,UAAU,GAAGF,uBAAuB,CAACG,KAAxB,EAAb;AACD;;AACD,wBAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACA;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,+BACA;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA,oBACGL;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFF;AAUD;;AAEDO,EAAAA,SAAS,GAAG;AACV,UAAMR,WAAW,GAAG,KAAK3B,KAAL,CAAWI,mBAA/B;AACA,UAAMgC,mBAAmB,GAAG,KAAKpC,KAAL,CAAWE,WAAvC;AAEA,QAAImC,SAAS,GAAG,EAAhB;AAEA,QAAIC,UAAU,GAAGC,MAAM,CAAC,sCAAD,CAAvB;;AAEA,YAAQD,UAAR;AACE,WAAK,EAAL;AACEE,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACA;;AACF,WAAK,IAAL;AACEA,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;;AACF;AACE,YAAIC,QAAQ,GAAG;AACbC,UAAAA,KAAK,EAAEJ,UADM;AAEbnB,UAAAA,IAAI,EAAEiB,mBAFO;AAGbO,UAAAA,OAAO,EAAE;AAHI,SAAf;AAMAN,QAAAA,SAAS,CAACH,IAAV,CAAeO,QAAf;;AAEA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAAS,CAACQ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCjB,UAAAA,WAAW,CAACO,IAAZ,CAAiBG,SAAS,CAACO,CAAD,CAA1B;AACD;;AAED,aAAK9B,QAAL,CAAc;AACZV,UAAAA,mBAAmB,EAAEuB;AADT,SAAd;AAGA;AAvBJ;AAyBD;;AAEDlB,EAAAA,QAAQ,GAAG;AACT,UAAM2B,mBAAmB,GAAG,KAAKpC,KAAL,CAAWE,WAAvC;AACA,QAAI4C,UAAU,GAAGpD,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAjB;;AAEA,QAAIqB,mBAAmB,CAACW,OAApB,CAA4BD,UAA5B,CAAJ,EAA6C;AAC3C,WAAKX,SAAL;AACD,KAFD,MAEO;AACL,UAAIa,MAAM,CAACC,OAAP,CAAe,oDAAf,CAAJ,EAA0E;AACxE,aAAKd,SAAL;AACD,OAFD,MAEO,CACN,CAJI,CAIH;;AACH,KAXQ,CAWP;;AACH;;AAEDe,EAAAA,WAAW,CAACN,CAAD,EAAI;AACb,UAAMjB,WAAW,GAAG,KAAK3B,KAAL,CAAWI,mBAAX,CAA+B+C,KAA/B,EAApB;AACA,UAAMf,mBAAmB,GAAG,KAAKpC,KAAL,CAAWE,WAAvC;;AAEA,QAAI8C,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAmE;AACjE,UAAIG,KAAK,GAAGR,CAAZ;;AAEA,UAAIQ,KAAK,IAAI,CAAC,CAAd,EAAiB;AACfzB,QAAAA,WAAW,CAAC0B,MAAZ,CAAmBD,KAAnB,EAA0B,CAA1B;AACD,OAFD,MAEO;AACLZ,QAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;;AAED,WAAK1B,QAAL,CAAc;AACZV,QAAAA,mBAAmB,EAAEuB;AADT,OAAd;AAGD;AACF;;AAEDf,EAAAA,gBAAgB,GAAG;AACjB,UAAMe,WAAW,GAAG,KAAK3B,KAAL,CAAWI,mBAA/B;AAEA,QAAIkD,SAAS,GAAG,EAAhB;AAEA,QAAIC,MAAM,GAAG;AACXb,MAAAA,KAAK,EAAC,EADK;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,EAFD;AAGXiD,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIa,MAAM,GAAG;AACXd,MAAAA,KAAK,EAAE,mBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgD,GAAhD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIc,MAAM,GAAG;AACXf,MAAAA,KAAK,EAAE,kBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIe,MAAM,GAAG;AACXhB,MAAAA,KAAK,EAAE,mBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,EAAjC,EAAqC,GAArC,EAA0CC,GAA1C,CAA8C,EAA9C,EAAkD,GAAlD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIgB,MAAM,GAAG;AACXjB,MAAAA,KAAK,EAAE,kBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIiB,MAAM,GAAG;AACXlB,MAAAA,KAAK,EAAE,kBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIkB,MAAM,GAAG;AACXnB,MAAAA,KAAK,EAAE,kBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAImB,MAAM,GAAG;AACXpB,MAAAA,KAAK,EAAE,qBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,QAAIoB,MAAM,GAAG;AACXrB,MAAAA,KAAK,EAAE,oBADI;AAEXvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBY,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,EAAyCC,GAAzC,CAA6C,EAA7C,EAAiD,GAAjD,CAFK;AAGX2B,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMI,QAAIqB,OAAO,GAAG;AAChBtB,MAAAA,KAAK,EACH,aAFc;AAGhBvB,MAAAA,IAAI,EAAEzB,MAAM,GAAGS,OAAT,CAAiB,KAAjB,EAAwBa,GAAxB,CAA4B,CAA5B,EAA+B,GAA/B,CAHU;AAIhB2B,MAAAA,OAAO,EAAE;AAJO,KAAd;AAOJW,IAAAA,SAAS,CAACpB,IAAV,CAAeqB,MAAf;AACAD,IAAAA,SAAS,CAACpB,IAAV,CAAesB,MAAf;AACAF,IAAAA,SAAS,CAACpB,IAAV,CAAeuB,MAAf;AACAH,IAAAA,SAAS,CAACpB,IAAV,CAAewB,MAAf;AACAJ,IAAAA,SAAS,CAACpB,IAAV,CAAeyB,MAAf;AACAL,IAAAA,SAAS,CAACpB,IAAV,CAAe0B,MAAf;AACAN,IAAAA,SAAS,CAACpB,IAAV,CAAe2B,MAAf;AACAP,IAAAA,SAAS,CAACpB,IAAV,CAAe4B,MAAf;AACAR,IAAAA,SAAS,CAACpB,IAAV,CAAe6B,MAAf;AACAT,IAAAA,SAAS,CAACpB,IAAV,CAAe8B,OAAf;;AAEA,SAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,SAAS,CAACT,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCjB,MAAAA,WAAW,CAACO,IAAZ,CAAiBoB,SAAS,CAACV,CAAD,CAA1B;AACD;;AAED,SAAK9B,QAAL,CAAc;AACZV,MAAAA,mBAAmB,EAAEuB;AADT,KAAd;AAGD;;AAEDsC,EAAAA,MAAM,GAAG;AACP,UAAMpD,gBAAgB,GAAG,KAAKb,KAAL,CAAWC,aAApC;AACA,UAAMuB,kBAAkB,GAAG,KAAKxB,KAAL,CAAWE,WAAtC;AACA,UAAMG,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA9B;AAED;AACG,0BACE;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACA;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA,oCACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBACG,KAAKkB,cAAL;AADH;AAAA;AAAA;AAAA;AAAA,oBADD,eAMF;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAA2B,cAAA,EAAE,EAAC,YAA9B;AACQ,cAAA,OAAO,EAAE,KAAKd,QADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANE,eAgBF,QAAC,MAAD;AACG,cAAA,aAAa,EAAE,KAAKT,KAAL,CAAWC,aAD7B;AAEG,cAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAF3B;AAGG,cAAA,mBAAmB,EAAE,KAAKF,KAAL,CAAWI,mBAHnC;AAIG,cAAA,WAAW,EAAEwC,CAAC,IAAI,KAAKM,WAAL,CAAiBN,CAAjB;AAJrB;AAAA;AAAA;AAAA;AAAA,oBAhBE,eAuBJ;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADH,eA6BE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACC;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA,oCAEG;AACE,cAAA,SAAS,EAAC,aADZ;AAC0B,cAAA,EAAE,EAAC,MAD7B;AAEE,cAAA,OAAO,EAAE,KAAKtC,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFH,eAKG;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,yBACC,KAAKmB,gBAAL,EADD,EAEC,KAAKJ,gBAAL,EAFD;AAAA;AAAA;AAAA;AAAA;AAAA,oBALH,eASG;AAAG,cAAA,SAAS,EAAC,cAAb;AAA4B,cAAA,EAAE,EAAC,MAA/B;AAAsC,cAAA,OAAO,EAAE,KAAKb,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAYE;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAA,mCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAhBF,EAkBO,KAAKkB,WAAL,EAlBP;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAsDD;AACF;;AArVoC;;AAwVvC,MAAMwC,MAAN,SAAqB5E,KAAK,CAACO,SAA3B,CAAqC;AACnCoE,EAAAA,MAAM,GAAG;AACP,UAAMpD,gBAAgB,GAAG,KAAKd,KAAL,CAAWE,aAApC;AACA,UAAMuB,kBAAkB,GAAG,KAAKzB,KAAL,CAAWG,WAAtC;AACA,UAAMyB,WAAW,GAAG,KAAK5B,KAAL,CAAWK,mBAA/B;AACA,UAAM8C,WAAW,GAAG,KAAKnD,KAAL,CAAWmD,WAA/B;AAEA,UAAMiB,mBAAmB,GAAGxC,WAAW,CAACyC,GAAZ,CAAgB,CAACC,KAAD,EAAQzB,CAAR,KAAc;AACxD,0BAEE;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,MAAMM,WAAW,CAACN,CAAD,CAH5B;AAAA,gCAKE,QAAC,uBAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,SAAS,EAAC,eAFZ;AAGE,UAAA,cAAc,EAAC,MAHjB;AAIE,UAAA,gBAAgB,EAAE,IAJpB;AAKE,UAAA,uBAAuB,EAAE,GAL3B;AAME,UAAA,sBAAsB,EAAE,GAN1B;AAOE,UAAA,sBAAsB,EAAE,GAP1B;AAAA,iCASE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,sBACGyB,KAAK,CAAClD,IAAN,CAAWG,MAAX,CAAkB,OAAlB;AADH;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBALF,eAkBE,QAAC,uBAAD;AACE,UAAA,SAAS,EAAC,IADZ;AAEE,UAAA,SAAS,EAAC,iBAFZ;AAGE,UAAA,cAAc,EAAC,OAHjB;AAIE,UAAA,gBAAgB,EAAE,IAJpB,CAKE;AACA;AACA;AAPF;AAAA,iCASE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBAA6B+C,KAAK,CAAC3B;AAAnC;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA,SACO2B,KAAK,CAAC3B,KADb;AAAA;AAAA;AAAA;AAAA,cAFF;AAkCD,KAnC2B,CAA5B;AAqCA,UAAM4B,iBAAiB,GAAG,EAA1B;;AAEA,SAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,mBAAmB,CAACtB,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,UAAIjB,WAAW,CAACiB,CAAD,CAAX,CAAezB,IAAf,CAAoBoD,MAApB,CAA2B/C,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACzD8C,QAAAA,iBAAiB,CAACpC,IAAlB,CAAuBiC,mBAAmB,CAACvB,CAAD,CAA1C;AACD;AACF;;AAED,wBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACG0B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AA3DkC;;AA6DrC,MAAME,QAAN,SAAuBlF,KAAK,CAACO,SAA7B,CAAuC;AACrCoE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAdoC;;AAgBvC,MAAMQ,UAAN,SAAyBnF,KAAK,CAACO,SAA/B,CAAyC;AACvCoE,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAA,6BACC;AAAA,gCACC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,eAMC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD,eAQC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD,eASC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD,eAUC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD,eAWC;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXD,eAYC;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFF;AAoBD;;AAtBsC;;AAyBzC,MAAMS,IAAN,SAAmBpF,KAAK,CAACO,SAAzB,CAAmC;AACjCoE,EAAAA,MAAM,GAAG;AACP,QAAIU,IAAI,GAAG,EAAX;AACA,QAAIxD,IAAI,GAAG,KAAKpB,KAAL,CAAW+B,uBAAtB;AACA,QAAIjB,gBAAgB,GAAG,KAAKd,KAAL,CAAWc,gBAAlC;AACA,QAAI+D,QAAQ,GAAG,KAAK7E,KAAL,CAAW6E,QAA1B;AACA,QAAI3D,MAAM,GAAG,KAAKlB,KAAL,CAAWkB,MAAxB;AACA,QAAIU,WAAW,GAAG,KAAK5B,KAAL,CAAW4B,WAA7B;;AAEA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAIiC,YAAY,GAAG,KAAnB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnD,WAAW,CAACkB,MAAhC,EAAwCiC,CAAC,EAAzC,EAA6C;AAC3C,YAAInD,WAAW,CAACmD,CAAD,CAAX,CAAe3D,IAAf,CAAoBoD,MAApB,CAA2BpD,IAA3B,EAAiC,KAAjC,CAAJ,EAA6C;AAC3C0D,UAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AAED,UAAI3D,GAAG,GAAG;AACR6D,QAAAA,IAAI,EAAE5D,IAAI,CAACG,MAAL,CAAY,IAAZ,EAAkB0D,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,CADE;AAERC,QAAAA,MAAM,EAAE9D,IAAI,CAACA,IAAL,EAFA;AAGR+D,QAAAA,cAAc,EAAE/D,IAAI,CAACc,KAAL,OAAiBpB,gBAAgB,CAACoB,KAAjB,EAHzB;AAIRkD,QAAAA,OAAO,EAAEhE,IAAI,CAACoD,MAAL,CAAY,IAAIa,IAAJ,EAAZ,EAAwB,KAAxB,CAJD;AAKRjE,QAAAA,IAAI,EAAEA,IALE;AAMRkE,QAAAA,SAAS,EAAER;AANH,OAAV;AASAF,MAAAA,IAAI,CAACzC,IAAL,eAAU,QAAC,GAAD;AAAK,QAAA,GAAG,EAAEhB,GAAV;AAAe,QAAA,QAAQ,EAAE0D,QAAzB;AAAmC,QAAA,MAAM,EAAE3D;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAV;AACAE,MAAAA,IAAI,GAAGA,IAAI,CAACC,KAAL,EAAP;AACAD,MAAAA,IAAI,CAACH,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD;;AACD,wBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACC2D;AADD;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApCgC;;AAuCnC,MAAMW,GAAN,SAAkBhG,KAAK,CAACO,SAAxB,CAAkC;AAChCoE,EAAAA,MAAM,GAAG;AACP,QAAI/C,GAAG,GAAG,KAAKnB,KAAL,CAAWmB,GAArB;AACA,QAAI0D,QAAQ,GAAG,KAAK7E,KAAL,CAAW6E,QAA1B;AACA,QAAI3D,MAAM,GAAG,KAAKlB,KAAL,CAAWkB,MAAxB;AAEA,wBACC;AACE,MAAA,SAAS,EACN,gBACCC,GAAG,CAACiE,OAAJ,GAAc,QAAd,GAAyB,EAD1B,KAECjE,GAAG,CAACgE,cAAJ,GAAqB,EAArB,GAA0B,kBAF3B,KAGChE,GAAG,CAACC,IAAJ,CAASoD,MAAT,CAAgBK,QAAhB,IAA4B,WAA5B,GAA0C,EAH3C,KAIC1D,GAAG,CAACmE,SAAJ,GAAgB,aAAhB,GAAgC,EAJjC,CAFL;AAQG,MAAA,OAAO,EAAE,MAAMpE,MAAM,CAACC,GAAD,CARxB;AAAA,gBAWKA,GAAG,CAAC+D;AAXT;AAAA;AAAA;AAAA;AAAA,YADD;AAeD;;AArB+B;;AAwBlCzF,QAAQ,CAACyE,MAAT,eAAgB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA8BsB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAA9B","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\n//import Calendar from 'react-calendar'\r\nimport './calendar.css';\r\nimport moment from 'moment';\r\nimport reactDom from 'react-dom';\r\n\r\n// export default function App() {\r\n//   const [dateState, setDateState] = useState(new Date())\r\n//   const changeDate = (e) => {\r\n//     setDateState(e)\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <Calendar \r\n//       value={dateState}\r\n//       onChange={changeDate}\r\n//       />\r\n//     <p>Current selected date is <b>{moment(dateState).format('MMMM Do YYYY')}</b></p>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n//const ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nclass Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedMonth: moment(),\r\n      selectedDay: moment().startOf(\"day\"),\r\n      selectedMonthEvents: [],\r\n      showEvents: false\r\n    };\r\n\r\n    this.previous = this.previous.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.addEvent = this.addEvent.bind(this);\r\n    this.showCalendar = this.showCalendar.bind(this);\r\n    this.goToCurrentMonthView = this.goToCurrentMonthView.bind(this);\r\n\r\n    this.initialiseEvents();\r\n  }\r\n\r\n  previous() {\r\n    const currentMonthView = this.state.selectedMonth;\r\n\r\n    this.setState({\r\n      selectedMonth: currentMonthView.subtract(1, \"month\")\r\n    });\r\n  }\r\n\r\n  next() {\r\n    const currentMonthView = this.state.selectedMonth;\r\n    this.setState({\r\n      selectedMonth: currentMonthView.add(1, \"month\")\r\n    });\r\n  }\r\n\r\n  select(day) {\r\n    this.setState({\r\n      selectedMonth: day.date,\r\n      selectedDay: day.date.clone(),\r\n      showEvents: true\r\n    });\r\n  }\r\n\r\n  goToCurrentMonthView(){\r\n    const currentMonthView = this.state.selectedMonth;\r\n    this.setState({\r\n      selectedMonth: moment()\r\n    });\r\n  }\r\n  \r\n  showCalendar() {\r\n    this.setState({\r\n      selectedMonth: this.state.selectedMonth,\r\n      selectedDay: this.state.selectedDay,\r\n      showEvents: false\r\n    });\r\n  }\r\n\r\n  renderMonthLabel() {\r\n    const currentMonthView = this.state.selectedMonth;\r\n    return (\r\n      <td className=\"month-label\">\r\n        {currentMonthView.format(\"MMMM YYYY\")}\r\n      </td>\r\n    );\r\n  }\r\n\r\n  renderDayLabel() {\r\n    const currentSelectedDay = this.state.selectedDay;\r\n    return (\r\n      <td className=\"month-label\">\r\n        {currentSelectedDay.format(\"DD MMMM YYYY\")}\r\n      </td>\r\n    );\r\n  }\r\n  \r\n  renderTodayLabel() {\r\n    const currentSelectedDay = this.state.selectedDay;\r\n    return (\r\n      <td className=\"today-label\" onClick={this.goToCurrentMonthView}>\r\n        Today\r\n      </td>\r\n    );\r\n  }\r\n  \r\n  renderWeeks() {\r\n    const currentMonthView = this.state.selectedMonth;\r\n    const currentSelectedDay = this.state.selectedDay;\r\n    const monthEvents = this.state.selectedMonthEvents;\r\n\r\n    let weeks = [];\r\n    let done = false;\r\n    let previousCurrentNextView = currentMonthView\r\n      .clone()\r\n      .startOf(\"month\")\r\n      .subtract(1, \"d\")\r\n      .day(\"Monday\");\r\n    let count = 0;\r\n    let monthIndex = previousCurrentNextView.month();\r\n\r\n    while (!done) {\r\n      weeks.push(\r\n        <Week\r\n          previousCurrentNextView={previousCurrentNextView.clone()}\r\n          currentMonthView={currentMonthView}\r\n          monthEvents={monthEvents}\r\n          selected={currentSelectedDay}\r\n          select={day => this.select(day)}\r\n        />\r\n      );\r\n      previousCurrentNextView.add(1, \"w\");\r\n      done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\r\n      monthIndex = previousCurrentNextView.month();\r\n    }\r\n    return (\r\n      \r\n      <div className=\"frame\">\r\n      <table className=\"dates-table\">\r\n      <tbody className=\"tbody\">\r\n        {weeks}\r\n      </tbody>\r\n      </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleAdd() {\r\n    const monthEvents = this.state.selectedMonthEvents;\r\n    const currentSelectedDate = this.state.selectedDay;\r\n\r\n    let newEvents = [];\r\n\r\n    var eventTitle = prompt(\"Please enter a name for your event: \");\r\n\r\n    switch (eventTitle) {\r\n      case \"\":\r\n        alert(\"Event name cannot be empty.\");\r\n        break;\r\n      case null:\r\n        alert(\"Changed your mind? You can add one later!\");\r\n        break;\r\n      default:\r\n        var newEvent = {\r\n          title: eventTitle,\r\n          date: currentSelectedDate,\r\n          dynamic: true\r\n        };\r\n\r\n        newEvents.push(newEvent);\r\n\r\n        for (var i = 0; i < newEvents.length; i++) {\r\n          monthEvents.push(newEvents[i]);\r\n        }\r\n\r\n        this.setState({\r\n          selectedMonthEvents: monthEvents\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  addEvent() {\r\n    const currentSelectedDate = this.state.selectedDay;\r\n    let isAfterDay = moment().startOf(\"day\").subtract(1, \"d\");\r\n\r\n    if (currentSelectedDate.isAfter(isAfterDay)) {\r\n      this.handleAdd();\r\n    } else {\r\n      if (window.confirm(\"Are you sure you want to add an event in the past?\")) {\r\n        this.handleAdd();\r\n      } else {\r\n      } // end confirm past\r\n    } //end is in the past\r\n  }\r\n\r\n  removeEvent(i) {\r\n    const monthEvents = this.state.selectedMonthEvents.slice();\r\n    const currentSelectedDate = this.state.selectedDay;\r\n\r\n    if (window.confirm(\"Are you sure you want to remove this event?\")) {\r\n      let index = i;\r\n\r\n      if (index != -1) {\r\n        monthEvents.splice(index, 1);\r\n      } else {\r\n        alert(\"No events to remove on this day!\");\r\n      }\r\n\r\n      this.setState({\r\n        selectedMonthEvents: monthEvents\r\n      });\r\n    }\r\n  }\r\n\r\n  initialiseEvents() {\r\n    const monthEvents = this.state.selectedMonthEvents;\r\n\r\n    let allEvents = [];\r\n\r\n    var event1 = {\r\n      title:\"\",\r\n      date: moment(),\r\n      dynamic: false\r\n    };\r\n\r\n    var event2 = {\r\n      title: \"Event 2 - Meeting\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(2, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event3 = {\r\n      title: \"Event 3 - Cinema\",\r\n      date: moment().startOf(\"day\").subtract(7, \"d\").add(18, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event4 = {\r\n      title: \"Event 4 - Theater\",\r\n      date: moment().startOf(\"day\").subtract(16, \"d\").add(20, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event5 = {\r\n      title: \"Event 5 - Drinks\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(12, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event6 = {\r\n      title: \"Event 6 - Diving\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(13, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event7 = {\r\n      title: \"Event 7 - Tennis\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(14, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event8 = {\r\n      title: \"Event 8 - Swimmming\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(17, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    var event9 = {\r\n      title: \"Event 9 - Chilling\",\r\n      date: moment().startOf(\"day\").subtract(2, \"d\").add(16, \"h\"),\r\n      dynamic: false\r\n    };\r\n    \r\n        var event10 = {\r\n      title:\r\n        \"Hello World\",\r\n      date: moment().startOf(\"day\").add(5, \"h\"),\r\n      dynamic: false\r\n    };\r\n\r\n    allEvents.push(event1);\r\n    allEvents.push(event2);\r\n    allEvents.push(event3);\r\n    allEvents.push(event4);\r\n    allEvents.push(event5);\r\n    allEvents.push(event6);\r\n    allEvents.push(event7);\r\n    allEvents.push(event8);\r\n    allEvents.push(event9);\r\n    allEvents.push(event10);\r\n\r\n    for (var i = 0; i < allEvents.length; i++) {\r\n      monthEvents.push(allEvents[i]);\r\n    }\r\n\r\n    this.setState({\r\n      selectedMonthEvents: monthEvents\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currentMonthView = this.state.selectedMonth;\r\n    const currentSelectedDay = this.state.selectedDay;\r\n    const showEvents = this.state.showEvents;\r\n\r\n   {\r\n      return (\r\n        <section className=\"calendar\">\r\n           <div className=\"col leftCol\">\r\n           <div class=\"content\">\r\n            <div className=\"year-header\">\r\n              {this.renderDayLabel()}\r\n            </div>\r\n\r\n         {/* <div className=\"year-header\"> */}\r\n         <button className=\"button\" id=\"add-button\"\r\n                 onClick={this.addEvent}>Add-Event</button>\r\n          \r\n            {/* </div> */}\r\n             {/* <a\r\n                className=\"arrow \"\r\n                onClick={this.showCalendar}\r\n              </a> */}\r\n\r\n       \r\n         <Events\r\n            selectedMonth={this.state.selectedMonth}\r\n            selectedDay={this.state.selectedDay}\r\n            selectedMonthEvents={this.state.selectedMonthEvents}\r\n            removeEvent={i => this.removeEvent(i)}\r\n          />\r\n       \r\n       <h3 className=\"name\">Press the Add button and enter a name for your event and you can delete me by pressing me!</h3>\r\n         \r\n       </div>\r\n       </div>\r\n          <div className=\"col rightCol\">\r\n           <div class=\"content\">\r\n            {/* <div className=\"row title-header\"> */}\r\n              <i\r\n                className=\"left-button\" id=\"prev\"\r\n                onClick={this.previous}>&lang;</i>\r\n              <div className=\"header-text\">\r\n              {this.renderTodayLabel()}\r\n              {this.renderMonthLabel()}\r\n              </div>\r\n              <i className=\"right-button\" id=\"next\" onClick={this.next}>&rang;</i> \r\n            </div>\r\n            <table className=\"months-table\">\r\n            <MonthNames />\r\n            </table>\r\n            <hr></hr>\r\n            <DayNames />\r\n      \r\n                {this.renderWeeks()}\r\n        </div>\r\n        {/* </div> */}\r\n         \r\n     </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass Events extends React.Component {\r\n  render() {\r\n    const currentMonthView = this.props.selectedMonth;\r\n    const currentSelectedDay = this.props.selectedDay;\r\n    const monthEvents = this.props.selectedMonthEvents;\r\n    const removeEvent = this.props.removeEvent;\r\n\r\n    const monthEventsRendered = monthEvents.map((event, i) => {\r\n      return (\r\n      \r\n        <div\r\n          key={event.title}\r\n          className=\"event-container\"\r\n          onClick={() => removeEvent(i)}\r\n        >\r\n          <ReactCSSTransitionGroup\r\n            component=\"div\"\r\n            className=\"animated-time\"\r\n            transitionName=\"time\"\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={500}\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={500}\r\n          >\r\n            <div className=\"event-time event-attribute\">\r\n              {event.date.format(\"HH:mm\")}\r\n            </div>\r\n          </ReactCSSTransitionGroup>\r\n          <ReactCSSTransitionGroup\r\n            component=\"h1\"\r\n            className=\"event-container\"\r\n            transitionName=\"title\"\r\n            transitionAppear={true}\r\n            // transitionAppearTimeout={500}\r\n            // transitionEnterTimeout={500}\r\n            // transitionLeaveTimeout={500}\r\n          >\r\n            <div className=\"event-name\">{event.title}</div>\r\n          </ReactCSSTransitionGroup>\r\n        </div>\r\n  \r\n      );\r\n    });\r\n\r\n    const dayEventsRendered = [];\r\n\r\n    for (var i = 0; i < monthEventsRendered.length; i++) {\r\n      if (monthEvents[i].date.isSame(currentSelectedDay, \"day\")) {\r\n        dayEventsRendered.push(monthEventsRendered[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n    <div className=\"col leftCol\">\r\n      <div className=\"day-events\">\r\n        {dayEventsRendered}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nclass DayNames extends React.Component {\r\n  render() {\r\n    return (\r\n      <table className=\" days-table\">\r\n        <td className=\" day\">Mon</td>\r\n        <td className=\" day\">Tue</td>\r\n        <td className=\" day\">Wed</td>\r\n        <td className=\" day\">Thu</td>\r\n        <td className=\" day\">Fri</td>\r\n        <td className=\" day\">Sat</td>\r\n        <td className=\"day\">Sun</td>\r\n      </table>\r\n\r\n    );\r\n  }\r\n}\r\nclass MonthNames extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n      <tbody>\r\n       <tr>\r\n        <td className=\" month\">Jan</td>\r\n        <td className=\" month\">Feb</td>\r\n        <td className=\" month\">Mar</td>\r\n        <td className=\" month\">Apr</td>\r\n        <td className=\" month\">May</td>\r\n        <td className=\" month\">Jun</td>\r\n        <td className=\"month\">Jul</td>\r\n        <td className=\" month\">Aug</td>\r\n        <td className=\" month\">Sep</td>\r\n        <td className=\" month\">Oct</td>\r\n        <td className=\" month\">Nov</td>\r\n        <td className=\"month\">Dec</td>\r\n       </tr>\r\n       </tbody>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nclass Week extends React.Component {\r\n  render() {\r\n    let days = [];\r\n    let date = this.props.previousCurrentNextView;\r\n    let currentMonthView = this.props.currentMonthView;\r\n    let selected = this.props.selected;\r\n    let select = this.props.select;\r\n    let monthEvents = this.props.monthEvents;\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      var dayHasEvents = false;\r\n\r\n      for (var j = 0; j < monthEvents.length; j++) {\r\n        if (monthEvents[j].date.isSame(date, \"day\")) {\r\n          dayHasEvents = true;\r\n        }\r\n      }\r\n\r\n      let day = {\r\n        name: date.format(\"dd\").substring(0, 1),\r\n        number: date.date(),\r\n        isCurrentMonth: date.month() === currentMonthView.month(),\r\n        isToday: date.isSame(new Date(), \"day\"),\r\n        date: date,\r\n        hasEvents: dayHasEvents\r\n      };\r\n\r\n      days.push(<Day day={day} selected={selected} select={select} />);\r\n      date = date.clone();\r\n      date.add(1, \"d\");\r\n    }\r\n    return( \r\n      <tr className=\"table-row\">\r\n      {days} \r\n      </tr>\r\n      );\r\n  }\r\n}\r\n\r\nclass Day extends React.Component {\r\n  render() {\r\n    let day = this.props.day;\r\n    let selected = this.props.selected;\r\n    let select = this.props.select;\r\n\r\n    return (\r\n     <td\r\n       className={\r\n          \"table-date\" +\r\n          (day.isToday ? \" today\" : \"\") +\r\n          (day.isCurrentMonth ? \"\" : \" different-month\") +\r\n          (day.date.isSame(selected) ? \" selected\" : \"\") +\r\n          (day.hasEvents ? \" has-events\" : \"\")\r\n        }\r\n        onClick={() => select(day)}\r\n      >     \r\n\r\n         {day.number}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Calendar />, document.getElementById(\"content\"));\r\n"]},"metadata":{},"sourceType":"module"}